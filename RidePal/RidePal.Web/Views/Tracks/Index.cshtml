@model PaginatedList<TrackVM>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_MyLayout.cshtml";
}

<h1>Track List</h1>

<p>
    <a asp-action="Index">Playlist Tracks</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-inline my-2 my-lg-0">
        <p>
            Find by name: <input type="text" placeholder="Enter name" name="searchString" value="@ViewData["CurrentFilter"]" />
            <input mr-sm-2" type="submit" value="Search" class="form-control mr-sm-2" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<div class="tracklist-row">
    <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Title</a>
    <a asp-action="Index" asp-route-sortOrder="@ViewData["DurationSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Duration</a>
</div>

@for (int i = 0; i < Model.Count(); i++)
{
    var track = Model.ElementAt(i);
    var index = i + 1;
    <!-- TEMPLATE TRACK ROW -->
    <div class="tracklist-row">
        <div class="index justify-content-center">@index</div>
        <div class="title">@track.Title</div>
        <div class="rank justify-content-center">@track.Rank</div>
        <div class="duration justify-content-center">@track.Duration</div>
    </div>
    <!-- TEMPLATE TRACK ROW / END -->
}

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    var prevPage = Model.PageIndex - 1;
    var nextPage = Model.PageIndex + 1;
}


<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@prevPage"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@nextPage"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
